name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties        

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Recover Gradle cache
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}

      - name: Decode google-services.json
        env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_GOOGLE_SERVICE }}
        run: echo $FIREBASE_SECRET > app/google-services.json

      - name: Check spotless
        run: ./gradlew spotlessCheck --stacktrace

      - name: Check spotless
        run: ./gradlew lintDebug --stacktrace

      - name: Build debug
        run: ./gradlew assembleDebug --stacktrace

      - name: Decode release certificate
        id: release_cert
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'upload-keystore.jks'
          encodedString: ${{ secrets.RELEASE_KEYSTORE_BASE64 }}

      - name: Build release
        run: ./gradlew assembleRelease
        env:
          RELEASE_KEYSTORE_PATH: ${{ steps.release_cert.outputs.filePath }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_PASSWORD }}

      - name: Upload debug artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: test-team
          file: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload release artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: test-team
          file: app/build/outputs/apk/release/app-release.apk

      - name: Upload build outputs (APKs)
        uses: actions/upload-artifact@v2
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload build reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: build-reports
          path: app/build/reports

  test:
    needs: build
    runs-on: macOS-latest # enables hardware acceleration in the virtual machine
    timeout-minutes: 30
    strategy:
      matrix:
        api-level: [23, 26, 29]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Copy CI gradle.properties
        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Decode google-services.json
        env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_GOOGLE_SERVICE }}
        run: echo $FIREBASE_SECRET > app/src/debug/google-services.json

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: x86
          disable-animations: true
          script: ./gradlew connectedCheck --stacktrace

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: app/build/reports
